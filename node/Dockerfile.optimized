# Multi-stage Dockerfile for OpenRank Node
# This builds both computer and challenger modes efficiently

FROM messense/rust-musl-cross:x86_64-musl AS chef
RUN cargo install cargo-chef
WORKDIR /app

FROM chef AS planner
COPY . .
RUN cargo chef prepare --recipe-path recipe.json

FROM chef AS builder
COPY --from=planner /app/recipe.json recipe.json

# Install system dependencies
RUN sudo apt-get update && apt-get install pkg-config protobuf-compiler -y
RUN rustup target add x86_64-unknown-linux-musl

# Build dependencies - this is the caching Docker layer!
RUN cargo chef cook --release --target=x86_64-unknown-linux-musl --recipe-path recipe.json

# Copy source code and build application
COPY . .
RUN cargo build --release --target=x86_64-unknown-linux-musl --bin openrank-node

# Runtime stage for computer mode
FROM alpine:latest AS computer
WORKDIR /app
COPY --from=builder /app/target/x86_64-unknown-linux-musl/release/openrank-node .
EXPOSE 8080
ENV RUST_LOG=info
ENTRYPOINT ["/app/openrank-node"]

# Runtime stage for challenger mode
FROM alpine:latest AS challenger
WORKDIR /app
COPY --from=builder /app/target/x86_64-unknown-linux-musl/release/openrank-node .
EXPOSE 8080
ENV RUST_LOG=info
ENTRYPOINT ["/app/openrank-node", "--challenger"]
